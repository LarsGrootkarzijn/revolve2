:orphan:

:py:mod:`_steady_state_mip`
=================================================================================

.. py:module:: experimentation.optimization.ea.population_management._steady_state_mip


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   experimentation.optimization.ea.population_management._steady_state_mip.steady_state_morphological_innovation_protection



Attributes
~~~~~~~~~~

.. autoapisummary::

   experimentation.optimization.ea.population_management._steady_state_mip.TGenotype
   experimentation.optimization.ea.population_management._steady_state_mip.TValues


.. py:data:: TGenotype

   

.. py:data:: TValues

   

.. py:function:: steady_state_morphological_innovation_protection(old_genotypes: list[TGenotype], old_fitnesses: list[float], old_ages: list[int], new_genotypes: list[TGenotype], new_fitnesses: list[float], new_ages: list[int], selection_fun: Callable[[list[list[TValues]], list[bool], int], numpy.typing.NDArray[numpy.int_]]) -> tuple[list[int], list[int]]

   Select `len(old_genotypes)` individuals using the provided selection function from combined set of old and new individuals.

   :param old_genotypes: Genotypes of the individuals in the parent population.
   :param old_fitnesses: Fitnesses of the individuals in the parent population.
   :param old_ages: Ages of the individuals in the parent population.
   :param new_genotypes: Genotypes of the individuals from the offspring.
   :param new_fitnesses: Fitnesses of the individuals from the offspring.
   :param new_ages: Ages of the individuals from the offspring .
   :param selection_fun: Function that selects n individuals from a population based on their genotype and fitness. (genotypes, fitnesses, ages, n) -> indices
   :returns: (indices of selected individuals from parent population, indices of selected individuals from offspring).


